// Message to change currently running service structured-log level.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: spbe/mq/loglevelchanger/consume.proto

package loglevelchanger

import (
	amqpmessage "github.com/bfi-finance/bfi-protobuf/gen/go/bfi/common/amqpmessage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Level is list of valid values to be set for log level.
type ChangeLevelRequest_Level int32

const (
	// DISABLED to disable the log.
	ChangeLevelRequest_DISABLED ChangeLevelRequest_Level = 0
	// TRACE to set logger to trace level.
	ChangeLevelRequest_TRACE ChangeLevelRequest_Level = 1
	// DEBUG to set logger to debug level.
	ChangeLevelRequest_DEBUG ChangeLevelRequest_Level = 2
	// INFO to set logger to info level.
	ChangeLevelRequest_INFO ChangeLevelRequest_Level = 3
	// WARN to set logger to warn level.
	ChangeLevelRequest_WARN ChangeLevelRequest_Level = 4
	// ERROR to set logger to error level.
	ChangeLevelRequest_ERROR ChangeLevelRequest_Level = 5
)

// Enum value maps for ChangeLevelRequest_Level.
var (
	ChangeLevelRequest_Level_name = map[int32]string{
		0: "DISABLED",
		1: "TRACE",
		2: "DEBUG",
		3: "INFO",
		4: "WARN",
		5: "ERROR",
	}
	ChangeLevelRequest_Level_value = map[string]int32{
		"DISABLED": 0,
		"TRACE":    1,
		"DEBUG":    2,
		"INFO":     3,
		"WARN":     4,
		"ERROR":    5,
	}
)

func (x ChangeLevelRequest_Level) Enum() *ChangeLevelRequest_Level {
	p := new(ChangeLevelRequest_Level)
	*p = x
	return p
}

func (x ChangeLevelRequest_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeLevelRequest_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_spbe_mq_loglevelchanger_consume_proto_enumTypes[0].Descriptor()
}

func (ChangeLevelRequest_Level) Type() protoreflect.EnumType {
	return &file_spbe_mq_loglevelchanger_consume_proto_enumTypes[0]
}

func (x ChangeLevelRequest_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeLevelRequest_Level.Descriptor instead.
func (ChangeLevelRequest_Level) EnumDescriptor() ([]byte, []int) {
	return file_spbe_mq_loglevelchanger_consume_proto_rawDescGZIP(), []int{0, 0}
}

// ChangeLevelRequest is a message type to change log level on runtime to all service that consume it.
type ChangeLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// level is log level to be set.
	Level ChangeLevelRequest_Level `protobuf:"varint,1,opt,name=level,proto3,enum=bfi.bravorabbitmq.loglevelchanger.ChangeLevelRequest_Level" json:"level,omitempty"`
}

func (x *ChangeLevelRequest) Reset() {
	*x = ChangeLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_mq_loglevelchanger_consume_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLevelRequest) ProtoMessage() {}

func (x *ChangeLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_mq_loglevelchanger_consume_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLevelRequest.ProtoReflect.Descriptor instead.
func (*ChangeLevelRequest) Descriptor() ([]byte, []int) {
	return file_spbe_mq_loglevelchanger_consume_proto_rawDescGZIP(), []int{0}
}

func (x *ChangeLevelRequest) GetLevel() ChangeLevelRequest_Level {
	if x != nil {
		return x.Level
	}
	return ChangeLevelRequest_DISABLED
}

// Consume is the valid incoming message to log level changer consumer.
type Consume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// header is the header for incoming message. Required.
	Header *amqpmessage.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are assignable to Message:
	//
	//	*Consume_ChangeLevel
	Message isConsume_Message `protobuf_oneof:"message"`
}

func (x *Consume) Reset() {
	*x = Consume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_mq_loglevelchanger_consume_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consume) ProtoMessage() {}

func (x *Consume) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_mq_loglevelchanger_consume_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consume.ProtoReflect.Descriptor instead.
func (*Consume) Descriptor() ([]byte, []int) {
	return file_spbe_mq_loglevelchanger_consume_proto_rawDescGZIP(), []int{1}
}

func (x *Consume) GetHeader() *amqpmessage.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (m *Consume) GetMessage() isConsume_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *Consume) GetChangeLevel() *ChangeLevelRequest {
	if x, ok := x.GetMessage().(*Consume_ChangeLevel); ok {
		return x.ChangeLevel
	}
	return nil
}

type isConsume_Message interface {
	isConsume_Message()
}

type Consume_ChangeLevel struct {
	// change_level is request to change log level.
	ChangeLevel *ChangeLevelRequest `protobuf:"bytes,2,opt,name=change_level,proto3,oneof"`
}

func (*Consume_ChangeLevel) isConsume_Message() {}

var File_spbe_mq_loglevelchanger_consume_proto protoreflect.FileDescriptor

var file_spbe_mq_loglevelchanger_consume_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x70, 0x62, 0x65, 0x2f, 0x6d, 0x71, 0x2f, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61,
	0x76, 0x6f, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x2e, 0x6c, 0x6f, 0x67, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x1a, 0x24, 0x73, 0x70, 0x62, 0x65,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x6d, 0x71, 0x70, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb3, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61,
	0x76, 0x6f, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x2e, 0x6c, 0x6f, 0x67, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x4a, 0x0a, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x22, 0xa9, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x61, 0x6d, 0x71, 0x70, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x72, 0x61, 0x62, 0x62,
	0x69, 0x74, 0x6d, 0x71, 0x2e, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x9a, 0x01, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62,
	0x72, 0x61, 0x76, 0x6f, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x2e, 0x6c, 0x6f, 0x67,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x0f, 0x4c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x48, 0x01, 0x50,
	0x01, 0x5a, 0x5c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x66,
	0x69, 0x2d, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x62, 0x66, 0x69, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x66,
	0x69, 0x2f, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x2f,
	0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x3b,
	0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spbe_mq_loglevelchanger_consume_proto_rawDescOnce sync.Once
	file_spbe_mq_loglevelchanger_consume_proto_rawDescData = file_spbe_mq_loglevelchanger_consume_proto_rawDesc
)

func file_spbe_mq_loglevelchanger_consume_proto_rawDescGZIP() []byte {
	file_spbe_mq_loglevelchanger_consume_proto_rawDescOnce.Do(func() {
		file_spbe_mq_loglevelchanger_consume_proto_rawDescData = protoimpl.X.CompressGZIP(file_spbe_mq_loglevelchanger_consume_proto_rawDescData)
	})
	return file_spbe_mq_loglevelchanger_consume_proto_rawDescData
}

var file_spbe_mq_loglevelchanger_consume_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spbe_mq_loglevelchanger_consume_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_spbe_mq_loglevelchanger_consume_proto_goTypes = []interface{}{
	(ChangeLevelRequest_Level)(0), // 0: bfi.bravorabbitmq.loglevelchanger.ChangeLevelRequest.Level
	(*ChangeLevelRequest)(nil),    // 1: bfi.bravorabbitmq.loglevelchanger.ChangeLevelRequest
	(*Consume)(nil),               // 2: bfi.bravorabbitmq.loglevelchanger.Consume
	(*amqpmessage.Header)(nil),    // 3: bfi.common.amqpmessage.Header
}
var file_spbe_mq_loglevelchanger_consume_proto_depIdxs = []int32{
	0, // 0: bfi.bravorabbitmq.loglevelchanger.ChangeLevelRequest.level:type_name -> bfi.bravorabbitmq.loglevelchanger.ChangeLevelRequest.Level
	3, // 1: bfi.bravorabbitmq.loglevelchanger.Consume.header:type_name -> bfi.common.amqpmessage.Header
	1, // 2: bfi.bravorabbitmq.loglevelchanger.Consume.change_level:type_name -> bfi.bravorabbitmq.loglevelchanger.ChangeLevelRequest
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_spbe_mq_loglevelchanger_consume_proto_init() }
func file_spbe_mq_loglevelchanger_consume_proto_init() {
	if File_spbe_mq_loglevelchanger_consume_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spbe_mq_loglevelchanger_consume_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_mq_loglevelchanger_consume_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spbe_mq_loglevelchanger_consume_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Consume_ChangeLevel)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spbe_mq_loglevelchanger_consume_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spbe_mq_loglevelchanger_consume_proto_goTypes,
		DependencyIndexes: file_spbe_mq_loglevelchanger_consume_proto_depIdxs,
		EnumInfos:         file_spbe_mq_loglevelchanger_consume_proto_enumTypes,
		MessageInfos:      file_spbe_mq_loglevelchanger_consume_proto_msgTypes,
	}.Build()
	File_spbe_mq_loglevelchanger_consume_proto = out.File
	file_spbe_mq_loglevelchanger_consume_proto_rawDesc = nil
	file_spbe_mq_loglevelchanger_consume_proto_goTypes = nil
	file_spbe_mq_loglevelchanger_consume_proto_depIdxs = nil
}
