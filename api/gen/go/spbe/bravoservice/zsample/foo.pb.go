// Message definition for zsample foo service.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: spbe/service/zsample/foo.proto

package zsample

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message to get single foo by its ID.
type GetFooByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the data.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFooByIDRequest) Reset() {
	*x = GetFooByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFooByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFooByIDRequest) ProtoMessage() {}

func (x *GetFooByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFooByIDRequest.ProtoReflect.Descriptor instead.
func (*GetFooByIDRequest) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{0}
}

func (x *GetFooByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// FooDataDetail is based response of the foo data.
type FooDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the data.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of foo.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description of foo.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Timestamp of the data creation.
	// Datetime value format is [RFC3339](https://www.ietf.org/rfc/rfc3339.html).
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,proto3" json:"created_at,omitempty"`
	// Timestamp of the data when it was updated.
	// This field is an example for openapi v3 annotation property.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
}

func (x *FooDataDetail) Reset() {
	*x = FooDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooDataDetail) ProtoMessage() {}

func (x *FooDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooDataDetail.ProtoReflect.Descriptor instead.
func (*FooDataDetail) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{1}
}

func (x *FooDataDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FooDataDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FooDataDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FooDataDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FooDataDetail) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// FooDataListItem smaller data for item list data.
type FooDataListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the foo.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the foo.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FooDataListItem) Reset() {
	*x = FooDataListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooDataListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooDataListItem) ProtoMessage() {}

func (x *FooDataListItem) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooDataListItem.ProtoReflect.Descriptor instead.
func (*FooDataListItem) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{2}
}

func (x *FooDataListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FooDataListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Basic page base pagination info.
type PageBasePagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Requested page.
	Page uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Requested item per page result.
	PerPage uint32 `protobuf:"varint,2,opt,name=per_page,proto3" json:"per_page,omitempty"`
}

func (x *PageBasePagination) Reset() {
	*x = PageBasePagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageBasePagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageBasePagination) ProtoMessage() {}

func (x *PageBasePagination) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageBasePagination.ProtoReflect.Descriptor instead.
func (*PageBasePagination) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{3}
}

func (x *PageBasePagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageBasePagination) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

// Definition of foo data list paginated response.
type FooDataListPaginatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Foo data list.
	Data []*FooDataListItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// Pagination info.
	Pagination *PageBasePagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *FooDataListPaginatedResponse) Reset() {
	*x = FooDataListPaginatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooDataListPaginatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooDataListPaginatedResponse) ProtoMessage() {}

func (x *FooDataListPaginatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooDataListPaginatedResponse.ProtoReflect.Descriptor instead.
func (*FooDataListPaginatedResponse) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{4}
}

func (x *FooDataListPaginatedResponse) GetData() []*FooDataListItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FooDataListPaginatedResponse) GetPagination() *PageBasePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetFooRequest request definition for get foo.
// It may contain filter, sorting, pagination, etc, but should be pre-filled with sane default on the server side.
type GetFooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Requested page. Default 1.
	Page uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Requested item per page result. Default: 50.
	PerPage uint32 `protobuf:"varint,2,opt,name=per_page,proto3" json:"per_page,omitempty"`
}

func (x *GetFooRequest) Reset() {
	*x = GetFooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFooRequest) ProtoMessage() {}

func (x *GetFooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFooRequest.ProtoReflect.Descriptor instead.
func (*GetFooRequest) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{5}
}

func (x *GetFooRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetFooRequest) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

// CreateFooRequest is request definition to create a new foo.
type CreateFooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique name of foo
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description of foo.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateFooRequest) Reset() {
	*x = CreateFooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFooRequest) ProtoMessage() {}

func (x *CreateFooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFooRequest.ProtoReflect.Descriptor instead.
func (*CreateFooRequest) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{6}
}

func (x *CreateFooRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFooRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// UpdateFooRequest is request definition to update foo by its unique ID.
type UpdateFooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of foo.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of foo.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description of foo.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateFooRequest) Reset() {
	*x = UpdateFooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFooRequest) ProtoMessage() {}

func (x *UpdateFooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFooRequest.ProtoReflect.Descriptor instead.
func (*UpdateFooRequest) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateFooRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFooRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFooRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// CreateFooResult is the success result message when creating a new foo.
type CreateFooResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The newly created identifier of the submitted foo data.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateFooResult) Reset() {
	*x = CreateFooResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spbe_service_zsample_foo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFooResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFooResult) ProtoMessage() {}

func (x *CreateFooResult) ProtoReflect() protoreflect.Message {
	mi := &file_spbe_service_zsample_foo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFooResult.ProtoReflect.Descriptor instead.
func (*CreateFooResult) Descriptor() ([]byte, []int) {
	return file_spbe_service_zsample_foo_proto_rawDescGZIP(), []int{8}
}

func (x *CreateFooResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_spbe_service_zsample_foo_proto protoreflect.FileDescriptor

var file_spbe_service_zsample_foo_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x70, 0x62, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x7a,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x66, 0x6f, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x18, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x6f, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xe0, 0x41, 0x02, 0xba, 0x47, 0x0c,
	0xba, 0x01, 0x02, 0x69, 0x64, 0x9a, 0x02, 0x04, 0x75, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xab, 0x02, 0x0a, 0x0d, 0x46, 0x6f, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12,
	0xba, 0x47, 0x0f, 0xa0, 0x01, 0x01, 0xba, 0x01, 0x02, 0x69, 0x64, 0x9a, 0x02, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0x47, 0x10, 0x78, 0x80, 0x01, 0x80, 0x01, 0x03, 0xa0,
	0x01, 0x01, 0xba, 0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x47, 0x05, 0x08, 0x01, 0x78, 0x80, 0x04, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0f, 0xba, 0x47, 0x0c,
	0x9a, 0x02, 0x09, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x4d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x11, 0xba, 0x47, 0x0e, 0x08, 0x01, 0x9a,
	0x02, 0x09, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x3a, 0x05, 0xba, 0x47, 0x02, 0x08, 0x01, 0x22, 0x44,
	0x0a, 0x0f, 0x46, 0x6f, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba,
	0x47, 0x0a, 0xa0, 0x01, 0x01, 0x9a, 0x02, 0x04, 0x75, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x22, 0xba, 0x47, 0x1f, 0x69, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x8a, 0x02, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xf0, 0x3f, 0x9a, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x2b, 0xba, 0x47, 0x28, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x59, 0x40, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x40, 0x8a, 0x02, 0x09, 0x09,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x40, 0x9a, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x52, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x1c, 0x46, 0x6f, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x66,
	0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x7a,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x46, 0x6f, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0xba, 0x47, 0x1a, 0x3a,
	0x05, 0x0a, 0x03, 0x12, 0x01, 0x31, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x9a,
	0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x43, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x27, 0xba, 0x47, 0x24, 0x3a, 0x06, 0x0a, 0x04, 0x12, 0x02, 0x35, 0x30, 0x59, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x40, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x40,
	0x9a, 0x02, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x08, 0x70, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xe0, 0x41, 0x02, 0xba, 0x47, 0x10, 0x78, 0x80,
	0x01, 0x80, 0x01, 0x03, 0xa0, 0x01, 0x01, 0xba, 0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x47, 0x05, 0x08, 0x01,
	0x78, 0x80, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x8e, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x15, 0xe0, 0x41, 0x02, 0xba, 0x47, 0x0f, 0xa0, 0x01, 0x01, 0xba, 0x01, 0x02, 0x69,
	0x64, 0x9a, 0x02, 0x04, 0x75, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xe0, 0x41, 0x02, 0xba,
	0x47, 0x0d, 0x78, 0x80, 0x01, 0x80, 0x01, 0x03, 0xba, 0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x47, 0x05, 0x08,
	0x01, 0x78, 0x80, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x30, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0xe0, 0x41, 0x02, 0xba, 0x47, 0x07, 0x9a, 0x02, 0x04, 0x75, 0x75, 0x69, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x32, 0xf5, 0x04, 0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f,
	0x12, 0x2a, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62,
	0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f,
	0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x22,
	0x04, 0x2f, 0x66, 0x6f, 0x6f, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x1f, 0x2a, 0x0a, 0x66, 0x6f, 0x6f,
	0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x11, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x12, 0x2a, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62,
	0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x7a, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x46, 0x6f, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x36, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x66, 0x6f, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x3a, 0x01, 0x2a, 0xba, 0x47, 0x1f, 0x2a, 0x0a, 0x66, 0x6f, 0x6f, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5a, 0x11, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f,
	0x12, 0x27, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x62, 0x66, 0x69, 0x2e,
	0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x7a, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x46, 0x6f, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x06, 0x12, 0x04, 0x2f, 0x66, 0x6f, 0x6f, 0xba,
	0x47, 0x1c, 0x2a, 0x07, 0x66, 0x6f, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x5a, 0x11, 0x0a, 0x0f, 0x0a,
	0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x12, 0x9a,
	0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2b, 0x2e,
	0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x66, 0x69,
	0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x7a, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x46, 0x6f, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x66, 0x6f,
	0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba, 0x47, 0x22, 0x2a, 0x0d, 0x66, 0x6f, 0x6f, 0x2e, 0x67,
	0x65, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x5a, 0x11, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x42, 0x94, 0x01, 0x0a, 0x1c,
	0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x66, 0x69, 0x2e, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x0e, 0x5a, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x01, 0x50, 0x01,
	0x5a, 0x60, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x75, 0x67,
	0x61, 0x73, 0x2d, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x2d, 0x53, 0x50, 0x42, 0x45, 0x2d, 0x49, 0x46,
	0x2d, 0x32, 0x30, 0x31, 0x39, 0x2f, 0x74, 0x61, 0x2d, 0x73, 0x70, 0x62, 0x65, 0x2d, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x70, 0x62, 0x65, 0x2f, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x7a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3b, 0x7a, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spbe_service_zsample_foo_proto_rawDescOnce sync.Once
	file_spbe_service_zsample_foo_proto_rawDescData = file_spbe_service_zsample_foo_proto_rawDesc
)

func file_spbe_service_zsample_foo_proto_rawDescGZIP() []byte {
	file_spbe_service_zsample_foo_proto_rawDescOnce.Do(func() {
		file_spbe_service_zsample_foo_proto_rawDescData = protoimpl.X.CompressGZIP(file_spbe_service_zsample_foo_proto_rawDescData)
	})
	return file_spbe_service_zsample_foo_proto_rawDescData
}

var file_spbe_service_zsample_foo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_spbe_service_zsample_foo_proto_goTypes = []interface{}{
	(*GetFooByIDRequest)(nil),            // 0: bfi.bravoservice.zsample.GetFooByIDRequest
	(*FooDataDetail)(nil),                // 1: bfi.bravoservice.zsample.FooDataDetail
	(*FooDataListItem)(nil),              // 2: bfi.bravoservice.zsample.FooDataListItem
	(*PageBasePagination)(nil),           // 3: bfi.bravoservice.zsample.PageBasePagination
	(*FooDataListPaginatedResponse)(nil), // 4: bfi.bravoservice.zsample.FooDataListPaginatedResponse
	(*GetFooRequest)(nil),                // 5: bfi.bravoservice.zsample.GetFooRequest
	(*CreateFooRequest)(nil),             // 6: bfi.bravoservice.zsample.CreateFooRequest
	(*UpdateFooRequest)(nil),             // 7: bfi.bravoservice.zsample.UpdateFooRequest
	(*CreateFooResult)(nil),              // 8: bfi.bravoservice.zsample.CreateFooResult
	(*timestamppb.Timestamp)(nil),        // 9: google.protobuf.Timestamp
}
var file_spbe_service_zsample_foo_proto_depIdxs = []int32{
	9, // 0: bfi.bravoservice.zsample.FooDataDetail.created_at:type_name -> google.protobuf.Timestamp
	9, // 1: bfi.bravoservice.zsample.FooDataDetail.updated_at:type_name -> google.protobuf.Timestamp
	2, // 2: bfi.bravoservice.zsample.FooDataListPaginatedResponse.data:type_name -> bfi.bravoservice.zsample.FooDataListItem
	3, // 3: bfi.bravoservice.zsample.FooDataListPaginatedResponse.pagination:type_name -> bfi.bravoservice.zsample.PageBasePagination
	6, // 4: bfi.bravoservice.zsample.FooService.CreateFoo:input_type -> bfi.bravoservice.zsample.CreateFooRequest
	7, // 5: bfi.bravoservice.zsample.FooService.UpdateFoo:input_type -> bfi.bravoservice.zsample.UpdateFooRequest
	5, // 6: bfi.bravoservice.zsample.FooService.GetFoo:input_type -> bfi.bravoservice.zsample.GetFooRequest
	0, // 7: bfi.bravoservice.zsample.FooService.GetFooByID:input_type -> bfi.bravoservice.zsample.GetFooByIDRequest
	8, // 8: bfi.bravoservice.zsample.FooService.CreateFoo:output_type -> bfi.bravoservice.zsample.CreateFooResult
	1, // 9: bfi.bravoservice.zsample.FooService.UpdateFoo:output_type -> bfi.bravoservice.zsample.FooDataDetail
	4, // 10: bfi.bravoservice.zsample.FooService.GetFoo:output_type -> bfi.bravoservice.zsample.FooDataListPaginatedResponse
	1, // 11: bfi.bravoservice.zsample.FooService.GetFooByID:output_type -> bfi.bravoservice.zsample.FooDataDetail
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spbe_service_zsample_foo_proto_init() }
func file_spbe_service_zsample_foo_proto_init() {
	if File_spbe_service_zsample_foo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spbe_service_zsample_foo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFooByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_service_zsample_foo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FooDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_service_zsample_foo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FooDataListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_service_zsample_foo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageBasePagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_service_zsample_foo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FooDataListPaginatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_service_zsample_foo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_service_zsample_foo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_service_zsample_foo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spbe_service_zsample_foo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFooResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spbe_service_zsample_foo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spbe_service_zsample_foo_proto_goTypes,
		DependencyIndexes: file_spbe_service_zsample_foo_proto_depIdxs,
		MessageInfos:      file_spbe_service_zsample_foo_proto_msgTypes,
	}.Build()
	File_spbe_service_zsample_foo_proto = out.File
	file_spbe_service_zsample_foo_proto_rawDesc = nil
	file_spbe_service_zsample_foo_proto_goTypes = nil
	file_spbe_service_zsample_foo_proto_depIdxs = nil
}
